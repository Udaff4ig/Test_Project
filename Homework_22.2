class Order:
    def __init__(self, customer_name, dishes):
        self.customer_name = customer_name
        self.dishes = dishes
        self.status = "новый"

class RestaurantQueue:
    def __init__(self):
        self.queue = []

    def is_empty(self):
        return len(self.queue) == 0

    def add_order(self, order):
        self.queue.append(order)
        print(f"Заказ от {order.customer_name} добавлен в очередь.")

    def take_order(self):
        if not self.is_empty():
            order = self.queue.pop(0)
            order.status = "в процессе"
            print(f"Заказ от {order.customer_name} взят в работу.")
        else:
            print("Очередь заказов пуста.")
            return None

    def complete_order(self, order):
        order.status = "готов"
        print(f"Заказ от {order.customer_name} готов.")

    def print_queue(self):
        if self.is_empty():
            print("Очередь заказов пуста.")
        else:
            print("Текущие заказы:")
            for i, order in enumerate(self.queue):
                print(f"{i + 1}. Заказ от {order.customer_name} ({order.status})")

    def cancel_order(self, order_id):
        self.order_id = order_id
        pass

    def modify_order(self, order_id, new_dishes):
        pass

    def set_priority(self, order_id, priority):
        pass

        queue = RestaurantQueue()

        order1 = Order("Иван", ["пицца", "салат"])
        order2 = Order("Мария", ["суп", "стейк"])

        queue.add_order(order1)
        queue.add_order(order2)

        queue.print_queue()

        order_in_progress = queue.take_order()

        queue.print_queue()

        queue.complete_order(order_in_progress)
